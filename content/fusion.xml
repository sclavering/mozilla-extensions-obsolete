<?xml version="1.0"?>

<bindings id="fusion"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="urlbar"
           extends="chrome://global/content/bindings/autocomplete.xml#autocomplete">

    <content sizetopopup="pref">
      <xul:stack class="urlbar-stack" flex="1">
        <xul:hbox class="autocomplete-textbox-container" flex="1">
          <children includes="image|deck">
            <xul:image class="autocomplete-icon" allowevents="true"/>
          </children>

          <xul:hbox class="textbox-input-box" flex="1" xbl:inherits="tooltiptext=inputtooltiptext">
            <children/>
            <html:input anonid="input" class="autocomplete-textbox textbox-input"
                        flex="1" allowevents="true"
                        xbl:inherits="tooltiptext=inputtooltiptext,onfocus,onblur,value,type,maxlength,disabled,size,readonly,userAction"/>
          </xul:hbox>
        </xul:hbox>

        <xul:progressmeter mode="normal" value="0" id="urlbar-progressmeter"/>
      </xul:stack>

      <xul:dropmarker anonid="historydropmarker" class="autocomplete-history-dropmarker"
                      allowevents="true"
                      xbl:inherits="open,enablehistory"/>

      <xul:popupset anonid="popupset" class="autocomplete-result-popupset"/>
    </content>
  </binding>


  <binding id="urlbar-progressmeter"
           extends="chrome://global/content/bindings/progressmeter.xml#progressmeter">
    <implementation>
      <!-- there's no sane reason for this to be here rather than in a .js file, but
           I couldn't persuade Moz to actually execute the .js file at the time -->
      <constructor>
        window.gfusionProgressMeter = this;

        // override the init method so that the new progress meter will be used
        var proto = nsBrowserStatusHandler.prototype;

        // This constuctor seems to get called immediately (before and?) after toolbar customisation,
        // leading to proto.init==proto.preFusionInit (and hence unbounded recursion) if not for this check
        if("preFusionInit" in proto) return;

        proto.preFusionInit = proto.init;
        proto.init = function() {
          this.preFusionInit();
          this.statusMeter = document.getElementById("urlbar-progressmeter");

          // Rather than hiding the panel that the stalled progress meter would be in, we want to
          // reset the meter. We do this here because this happens to be executed during
          // prepareForStartup() in browser.js after the code that normally sets gProgressMeterPanel
          gProgressMeterPanel = {
            set collapsed(val) {
              if(val) gfusionProgressMeter.value = 0;
            }
          };
        };
      </constructor>

      <!-- because code in browser.js tries to uncollapse the parentNode, and the
           urlbar-progressmeter doesn't have one (because it's anonymous content?) -->
      <!-- xxx should this set the progress meter value to 0 ? -->
      <field name="parentNode">{collapsed: false}</field>

      <field name="urlbar">document.getBindingParent(this)</field>

      <!-- we want to set an attribute on the urlbar when the progressmeter is active
           for use by themes with rounded url bars -->
      <property name="value" onget="return this.getAttribute('value');">
        <setter><![CDATA[
          var p = Math.round(val);
          if(p == 100) p = 0;

          var c = this.value;
          if(p == c) return p;

          var delta = p - c;
          if(delta > 3 || p == 0 || delta < -3) this.setAttribute("value", p);

          if(p==0) this.urlbar.removeAttribute("progressMeterActive");
          else if(c==0) this.urlbar.setAttribute("progressMeterActive", "true");

          return p;
        ]]></setter>
      </property>
    </implementation>
  </binding>
</bindings>
