<?xml version="1.0"?>

<?xml-stylesheet href="chrome://goup/skin/" type="text/css"?>

<!DOCTYPE overlay SYSTEM "chrome://goup/locale/goup.dtd">

<overlay id="goup" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<toolbarpalette id="BrowserToolbarPalette">
  <toolbarbutton id="goup-button" class="toolbarbutton-1"
      oncommand="GoUp.buttonClicked(event);"
      onclick="GoUp.buttonClicked2(event);"
      label="&label;" tooltiptext="&tooltip;"/>
</toolbarpalette>

<script type="application/x-javascript"><![CDATA[

const GoUp = {
  init: function() {
    // get dom nodes ourselves incase gURLBar not initialised yet
    var urlbar = document.getElementById("urlbar");
    urlbar.addEventListener("keypress", GoUp.keyComboInUrlBar, true);
    var content = document.getElementById("appcontent");
    content.addEventListener("keypress", GoUp.keyComboInPage, true);
  },

  buttonClicked2: function(e) {
    if(e.button==1) this.buttonClicked(e);
  },

  buttonClicked: function(e) {
    var up = this.getUp(_content.document.location.href);
    openUILink(up, e);
  },

  keyComboInUrlBar: function(e) {
    if(!e.altKey || e.keyCode!=e.DOM_VK_UP) return;
    var up = GoUp.getUp(gURLBar.value);
    if(up) gURLBar.value = up;
    e.preventDefault()
    e.stopPropagation();
  },

  keyComboInPage: function(e) {
    if(!e.altKey || e.keyCode!=e.DOM_VK_UP) return;
    var doc = e.originalTarget.ownerDocument
    var up = GoUp.getUp(doc.location.href);
    if(up) doc.location.href = up;
  },

  getUp: function(url) {
    var matches, origUrl = url;
    // trim filename (this makes subdriectory digging easier)
    matches = url.match(/(^.*\/)(.*)/);
    if(!matches) return null; //only fails if "url" has no /'s
    url = matches[1];
    if(url!=origUrl && !/(index|main)\.(php3?|html?)/i.test(url))
      return url;
    // dig through subdirs
    matches = url.match(/^([^\/]*?:\/\/.*\/)[^\/]+?\//);
    if(matches) return matches[1];
    // we've reach (ht|f)tp://foo.com/, climb up through subdomains
    // split into protocol and domain
    matches = url.match(/([^:]*:\/\/)?(.*)/);
    var protocol = matches[1], domain = matches[2];
    matches = domain.match(/^[^\.]*\.(.*)/);
    if(matches) return (protocol+matches[1]);
    // nothing found
    return null;
  }
};

window.addEventListener("load", GoUp.init, false);

]]></script>

</overlay>
